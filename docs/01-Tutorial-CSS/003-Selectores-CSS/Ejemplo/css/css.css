/*========================================================================*/

p {
    text-align: center;
    color: red;
}
#para1 {
    text-align: center;
    color: red;
}
.center {
    text-align: center;
    color: red;
}
p.center {
    text-align: center;
    color: red;
}
* {
    text-align: center;
    color: blue;
}
/*========================================================================*/

/*Selectores combinados*/

/*======================*/

/*==========================================================================================================*/

/*Selector descendiente
El selector descendiente coincide con todos los elementos que son descendientes de un elemento especificado.
El siguiente ejemplo selecciona todos los elementos p dentro de los elementos div:
*/

div p {
    background-color: yellow;
}
/*==========================================================================================================*/

/*Selector de niños
El selector hijo selecciona todos los elementos que son hijos de un elemento especificado.
El siguiente ejemplo selecciona todos los elementos p que son hijos de un elemento div:*/

div>p {
    background-color: yellow;
}
/*=========================================================================================================*/

/*Selector de hermanos adyacentes

El selector de hermanos adyacentes selecciona todos los elementos que son los hermanos adyacentes de un elemento especificado.
Los elementos hermanos deben tener el mismo elemento padre, y 'adyacente' significa 'inmediatamente siguiente'.
El siguiente ejemplo selecciona todos los elementos p que se colocan inmediatamente después de los elementos div:*/

div+p {
    background-color: yellow;
}
/*==========================================================================================================*/

/*Selector general de hermanos
El selector general de hermanos selecciona todos los elementos que son hermanos de un elemento especificado.
El siguiente ejemplo selecciona todos los elementos p que son hermanos de elementos div:*/

div~p {
    background-color: yellow;
}
/*==========================================================================================================*/

/*================================*/

/*Todas las pseudo clases de CSS*/

/*================================*/

/*===========================================================================================================*/

/*Definición y uso

El selector activo se utiliza para seleccionar y diseñar el enlace activo.
Un enlace se activa cuando hace clic en él.
Consejo: El selector activo puede usarse en todos los elementos, no solo en los enlaces.
Sugerencia: Use el selector de enlaces para diseñar enlaces a páginas no visitadas, el selector: visitas para enlazar estilos a páginas visitadas y el selector: desplazar el cursor para enlazar enlaces cuando pase el mouse sobre ellas.
Nota: ¡active DEBE venir después: pase el mouse (si está presente) en la definición CSS para que sea efectivo!*/

/* enlace no visitado */

a:link {
    color: green;
}
/* enlace visitado */

a:visited {
    color: green;
}
/* pasar el mouse sobre el enlace*/

a:hover {
    color: red;
}
/* enlace seleccionado */

a:active {
    color: yellow;
}
/*===========================================================================================================*/

/* Coincide con cualquierchecked/selected radio, checkbox, or option */

:checked {
    margin-left: 25px;
    border: 1px solid blue;
}
/*

<div>
  <input type="radio" name="my-input" id="yes">
  <label for="yes">Yes</label>

  <input type="radio" name="my-input" id="no">
  <label for="no">No</label>
</div>

<div>
  <input type="checkbox" name="my-checkbox" id="opt-in">
  <label for="opt-in">Check me!</label>
</div>

*/

/*=================================================================================================== */

/*Definición y uso

El selector: disabled deshabilita cada elemento deshabilitado (utilizado principalmente en elementos de formulario).*/

/*Selector de atributos
    Selecciona todos los elementos que tienen el atributo dado.
    Sintaxis: [attr] [attr = value] [attr ~ = value] [attr | = value] [attr ^ = value] [attr $ = value] [attr * = value]
    Ejemplo: [reproducción automática] coincidirá con todos los elementos que tengan establecido el atributo de reproducción 
    automática (a cualquier valor).*/

input[type=text]:enabled {
    background: #ffff00;
}
input[type=text]:disabled {
    background: #dddddd;
}
/*=====================================================================================================================*/

/*Definición y uso

El selector: empty coincide con cada elemento que no tiene hijos (incluidos los nodos de texto).*/

p:empty {
    width: 100px;
    height: 20px;
    background: #ff0000;
}
/*=======================================================================================================================*/

/*Definición y uso

El selector: enabled coincide con cada elemento habilitado (utilizado principalmente en elementos de formulario).*/

input[type=text]:enabled {
    background: #ffff00;
}
input[type=text]:disabled {
    background: #dddddd;
}
/*========================================================================================================================*/

/*Definición y uso

El selector: primer hijo se utiliza para seleccionar el selector especificado, solo si es el primer hijo de su padre.*/

p:first-child {
    background-color: yellow;
}
p:first-child i {
    background: yellow;
}
ul> :first-child {
    background: yellow;
}
/*==========================================================================================================================*/

/*Definición y uso

El selector: first-of-type coincide con cada elemento que es el primer hijo, de un tipo particular, de su padre.
Consejo: Esto es lo mismo que:  :nth-of-type(1).*/

p:first-of-type {
    background: red;
}
/*=========================================================================================================================*/

/*Definición y uso

El selector de foco se usa para seleccionar el elemento que tiene foco.
Consejo: El selector de foco está permitido en elementos que aceptan eventos de teclado u otras entradas del usuario.*/

input:focus {
    background-color: yellow;
}
input[type=text] {
    width: 100px;
    -webkit-transition: width .35s ease-in-out;
    transition: width .35s ease-in-out;
}
input[type=text]:focus {
    width: 250px;
}
/*==========================================================================================================================*/

p:hover, h1:hover, a:hover {
    background-color: yellow;
}
/*-------------------------------*/

div {
    background-color: yellow;
    padding: 20px;
    display: none;
}
span:hover+div {
    display: block;
}
/*-------------------------------*/

div {
    background-color: green;
}
div a {
    text-decoration: none;
    color: white;
    font-size: 20px;
    padding: 15px;
    display: inline-block;
}
ul {
    display: inline;
    margin: 0;
    padding: 0;
}
ul li {
    display: inline-block;
}
ul li:hover {
    background: #555;
}
ul li:hover ul {
    display: block;
}
ul li ul {
    position: absolute;
    width: 200px;
    display: none;
}
ul li ul li {
    background: #555;
    display: block;
}
ul li ul li a {
    display: block !important;
}
ul li ul li:hover {
    background: #666;
}
/*=======================================================================================================*/

/*
Definición y uso

El selector: in-range selecciona todos los elementos con un valor que está dentro de un rango especificado.
Nota: ¡El selector en rango solo funciona para elementos de entrada con atributos mínimos y / o máximos!
Consejo: Use el selector: fuera de rango para seleccionar todos los elementos con un valor que esté fuera de un rango especificado.
*/

input:in-range {
    border: 2px solid yellow;
}
/*

<h3>A demonstration of the :in-range selector.</h3>

<input type="number" min="5" max="10" value="7">

<p>Try typing a number out of range (less than 5 or higher than 10), to see the styling disappear.</p>

*/

/*============================================================================================================*/

/*
Definición y uso

El selector no válido selecciona elementos de formulario con un valor que no se valida de acuerdo con la configuración del elemento.
Nota: El selector no válido solo funciona para elementos de formulario con limitaciones, como elementos de entrada con atributos mínimo y máximo, campos de correo electrónico sin un correo electrónico legal o campos de número sin un valor numérico, etc.
Consejo: Use el selector válido para seleccionar elementos de formulario con un valor que se valide de acuerdo con la configuración del elemento.

*/

input:invalid {
    border: 2px solid red;
}
/*
<input type="email" value="supportEmail">

*/

/*====================================================================================================================*/

/*Definición y uso

El selector: lang () se usa para seleccionar elementos con un atributo lang con el valor especificado.
Nota: El valor del atributo lang suele ser un código de idioma de dos letras, como lang = 'fr' (para francés), o dos códigos de idioma combinados, como lang = 'fr-ca' (para francés canadiense).*/

p:lang(it) {
    background: yellow;
}
/*
<p lang="it">Ciao bella!</p>
*/

/*========================================================================================================================*/

/*Definición y uso

El selector: last-child coincide con cada elemento que es el último hijo de su padre.
Consejo: p: last-child es igual a p: nth-last-child (1).*/

p:last-child {
    background: #ff0000;
}
/*=======================================================================================================================*/

/*
Definición y uso

El selector: last-of-type coincide con cada elemento que es el último hijo, de un tipo particular, de su padre.
Consejo: Esto es lo mismo que: nth-last-of-type (1).*/

p:last-of-type {
    background: #ff0000;
}
/*========================================================================================================================*/

/*Definición y uso

El: selector de enlace se utiliza para seleccionar enlaces no visitados.
Nota: El selector de enlaces no da estilo a los enlaces que ya ha visitado.
Sugerencia: Use el selector: visitado para diseñar enlaces a páginas visitadas, 
el selector: pase el cursor para diseñar enlaces cuando pase el mouse sobre ellos y 
el selector activo para enlazar enlaces cuando haga clic en ellos.*/

a:link {
    background-color: yellow;
}
/*----------------------------*/

/* unvisited link */

a:link {
    color: green;
}
/* visited link */

a:visited {
    color: green;
}
/* mouse over link */

a:hover {
    color: red;
}
/* selected link */

a:active {
    color: yellow;
}
/*==============================================================================================================================*/

/*Definición y uso

El selector: not (selector) coincide con cada elemento que NO es el elemento / selector especificado.*/

p {
    color: green;
}
:not(p) {
    color: blue;
}
/*==================================================================================================================================*/

/***************************************/

/*
Definición y uso

El selector: nth-child (n) coincide con cada elemento que es el enésimo hijo, 
independientemente del tipo, de su padre.
n puede ser un número, una palabra clave o una fórmula.
Consejo: Mire el selector: nth-of-type () para seleccionar el 
elemento que es el enésimo hijo, de un tipo particular, de su padre.
*/

p:nth-child(2) {
    background: red;
}
/*================================================================================================================================*/

/*Definición y uso

El selector: nth-last-child (n) coincide con cada elemento que es el enésimo hijo, 
independientemente del tipo, de su padre, contando desde el último hijo.
n puede ser un número, una palabra clave o una fórmula.
Consejo: Mire el selector nth-last-of-type () para seleccionar el elemento que 
es el enésimo hijo, de un tipo específico, de su padre, contando desde el último hijo.
*/

p:nth-last-child(2) {
    background: red;
}
/*================================================================================================================================*/

/*Definición y uso

El selector: nth-last-of-type (n) coincide con cada elemento que es el enésimo hijo, de un tipo particular, 
de su padre, contando desde el último hijo. n puede ser un número, una palabra clave o una fórmula. 
Consejo: Mire el selector: nth-last-child () para seleccionar el elemento que es el enésimo hijo, 
independientemente del tipo, de su padre, contando desde el último hijo.*/

p:nth-last-of-type(2) {
    background: red;
}
/*==============================================================================================================================*/

/*Definición y uso

El selector: nth-of-type (n) coincide con cada elemento que es el enésimo hijo,
de un tipo particular, de su padre.
n puede ser un número, una palabra clave o una fórmula.
Consejo: Mire el selector: nth-child () para seleccionar el
elemento que es el enésimo hijo, independientemente del tipo, de su padre.*/

p:nth-of-type(2) {
    background: red;
}
/*==============================================================================================================================*/

/*Definición y uso

El selector: only-of-type coincide con cada elemento que es el único hijo de su tipo, de su padre.*/

p:only-of-type {
    background: #ff0000;
}
/*==============================================================================================================================*/

/*Definición y uso

El selector: only-child coincide con cada elemento que es el único hijo de su padre.*/

p:only-child {
    background: #ff0000;
}
/*==============================================================================================================================*/

/*Definición y uso

El: selector opcional selecciona elementos de formulario que son opcionales.
Los elementos de formulario sin atributo requerido se definen como opcionales.
Nota: El selector opcional solo se aplica a los elementos del formulario: input, select y textarea.
Consejo: Use el selector: required para seleccionar los elementos de formulario que se requieren.*/

input:optional {
    background-color: yellow;
}
/*
<p>An optional input element:<br><input></p>

<p>A required input element:<br><input required></p>

*/

/*============================================================================================================================*/

/*Definición y uso

El selector: fuera de rango selecciona todos los elementos con un valor que está fuera de un rango especificado.
Nota: ¡El selector fuera de rango solo funciona para elementos de entrada con atributos mínimos y / o máximos!
Consejo: Use el selector: in-range para seleccionar todos los elementos con un valor que esté dentro de un rango especificado.*/

input:out-of-range {
    border: 2px solid red;
}
/*
<input type="number" min="5" max="10" value="17">
*/

/*==========================================================================================================================*/

/*
Definición y uso

El selector: solo lectura selecciona elementos que son 'de solo lectura'.

Los elementos de formulario con un atributo 'solo lectura' se definen como 'solo lectura'.*/

input:-moz-read-only {
    /* For Firefox */
    background-color: yellow;
}
input:read-only {
    background-color: yellow;
}
/* 
<p>A normal input element:<br><input value="hello"></p>

<p>A readonly input element:<br><input readonly value="hello"></p>
*/

/*==========================================================================================================================*/

/*Definición y uso

El selector: lectura-escritura selecciona elementos de formulario que son 'legibles' y 'grabables'.

Los elementos de formulario sin atributo 'solo lectura' y sin atributo 'deshabilitado' se definen como 'lectura' y 'capacidad de escritura'.*/

input:-moz-read-write {
    /* For Firefox */
    background-color: yellow;
}
input:read-write {
    background-color: yellow;
}
/*<p>A normal input element:<br><input value="hello"></p>

<p>A readonly input element:<br><input readonly value="hello"></p>*/

/*================================================================================================================================*/

/*Definición y uso

El selector: required selecciona los elementos de formulario que se requieren.
Los elementos de formulario con un atributo requerido se definen como necesarios.
Nota: El selector requerido solo se aplica a los elementos del formulario: input, select y textarea.
Consejo: Use el selector opcional para seleccionar elementos de formulario que son opcionales.*/

input:required {
    background-color: yellow;
}
/*<p>An optional input element:<br><input></p>

<p>A required input element:<br><input required></p>*/

/*================================================================================================================================*/

/*Definición y uso

El selector raíz: coincide con el elemento raíz del documento.

En HTML, el elemento raíz es siempre el elemento html.*/

:root {
    background: #ff0000;
}
/*=============================================================================================================================*/

/*Definición y uso

Las URL con un # seguido de un enlace de nombre de anclaje a un determinado elemento dentro de un documento. El elemento al
 que se vincula es el elemento objetivo.

El: selector de destino se puede utilizar para diseñar el elemento objetivo activo actual.*/

:target {
    border: 2px solid #D4D4D4;
    background-color: #e5eecc;
}
/*
<p><a href="#news1">Jump to New content 1</a></p>
<p><a href="#news2">Jump to New content 2</a></p>
<p>Click on the links above and the :target selector highlight the current active HTML anchor.</p>
<p id="news1"><b>New content 1...</b></p>
<p id="news2"><b>New content 2...</b></p>
*/

/*---------------------------------------------------------------------------------------------------------------------------------*/

/*
<!DOCTYPE html>
<html>
<head>
<style>*/

/* Add animation (Chrome, Safari, Opera) */

@-webkit-keyframes example {
    from {
        top: -100px;
        opacity: 0;
    }
    to {
        top: 0px;
        opacity: 1;
    }
}
/* Add animation (Standard syntax) */

@keyframes example {
    from {
        top: -100px;
        opacity: 0;
    }
    to {
        top: 0px;
        opacity: 1;
    }
}
/* The modal's background */

.modal {
    display: none;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0, 0, 0);
    background-color: rgba(0, 0, 0, 0.4);
}
/* Display the modal when targeted */

.modal:target {
    display: table;
    position: absolute;
}
/* The modal box */

.modal-dialog {
    display: table-cell;
    vertical-align: middle;
}
/* The modal's content */

.modal-dialog .modal-content {
    margin: auto;
    background-color: #f3f3f3;
    position: relative;
    padding: 0;
    outline: 0;
    border: 1px #777 solid;
    text-align: justify;
    width: 80%;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    /* Add animation */
    -webkit-animation-name: example;
    /* Chrome, Safari, Opera */
    -webkit-animation-duration: 0.5s;
    /* Chrome, Safari, Opera */
    animation-name: example;
    animation-duration: 0.5s;
}
/* The button used to close the modal */

.closebtn {
    text-decoration: none;
    float: right;
    font-size: 35px;
    font-weight: bold;
    color: #fff;
}
.closebtn:hover, .closebtn:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}
.container {
    padding: 2px 16px;
}
header {
    background-color: #5cb85c;
    font-size: 25px;
    color: white;
}
footer {
    background-color: #5cb85c;
    font-size: 20px;
    color: white;
}
/*</style>
</head>
<body>

<a href="#id01">Open Modal</a>

<div id="id01" class="modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <header class="container">
        <a href="#" class="closebtn">×</a>
        <h2>Modal Header</h2>
      </header>
      <div class="container">
        <p>Some text in the modal.</p>
        <p>Some text in the modal.</p>
      </div>
      <footer class="container">
        <p>Modal footer</p>
      </footer>
    </div>
  </div>
</div>

</body>
</html>
*/

/*---------------------------------------------------------------------------------------------------------------------------------*/

/*=================================================================================================================================*/

/*Definición y uso

El selector: válido selecciona elementos de formulario con un valor que se valida de acuerdo con la configuración del elemento.

Nota: El selector válido solo funciona para elementos de formulario con limitaciones, como elementos de entrada con atributos mínimo y máximo, campos de correo electrónico con un correo electrónico legal o campos numéricos con un valor numérico, etc.

Consejo: Use el selector: inválido para seleccionar elementos de formulario con un valor que no se valida de acuerdo con la configuración del elemento.*/

input:valid {
    background-color: yellow;
}
/*<input type="email" value="support@example.com">*/

/*==================================================================================================================================*/

/*Definición y uso

El selector: visitado se usa para seleccionar enlaces visitados.

Sugerencia: utilice el selector de enlaces: para asignar estilo a los enlaces a páginas no visitadas, el selector: coloque el cursor sobre los enlaces de estilo cuando pase el mouse sobre ellos y el selector: activo a los enlaces de estilo cuando haga clic en ellos.

Los navegadores limitan los estilos que se pueden configurar para: enlaces visitados, debido a problemas de seguridad.

Los estilos permitidos son:

    color
    color de fondo
    color de borde (y color de borde para lados separados)
    color de contorno
    columna-regla-color
    las partes de color de relleno y trazo

Todos los demás estilos se heredan de un: enlace.*/

/* unvisited link */

a:link {
    color: green;
}
/* visited link */

a:visited {
    color: green;
}
/* mouse over link */

a:hover {
    color: red;
}
/* selected link */

a:active {
    color: yellow;
}
/*================================================================================================================================*/

/*Todos los pseudo elementos CSS*/

/*Definición y uso

El selector :: after inserta algo después del contenido de cada elemento seleccionado.

Use la propiedad de contenido para especificar el contenido a insertar.

Use el selector :: before para insertar algo antes del contenido.*/

p::after {
    content: " - Remember this";
}
/*================================================================================================================================*/

/*Definición y uso

El selector :: before inserta algo antes del contenido de cada elemento seleccionado.

Use la propiedad de contenido para especificar el contenido a insertar.

Use el selector :: after para insertar algo después del contenido.*/

p::before {
    content: "Read this: ";
}
/*================================================================================================================================*/

/*Definición y uso

El :: selector de primera letra se utiliza para agregar un estilo a la primera letra del selector especificado.

Nota: Las siguientes propiedades se pueden usar con :: first-letter:

    propiedades de fuente
    propiedades de color
    propiedades de fondo
    propiedades de margen
    propiedades de relleno
    propiedades de borde
    decoracion de texto
    alineación vertical (solo si float es 'none')
    transformación de texto
    altura de la línea
    flotador
    claro

Nota: El selector de primera letra :: solo se puede usar con elementos de nivel de bloque.*/

p::first-letter {
    font-size: 200%;
    color: #8A2BE2;
}
/*======================================================================================================================*/

/* Ejemplos usando content propiedad  que guarda relacion con after  y before */

/*-----------------------------*/

p::before {
    content: "Read this -";
}
p#hometown::before {
    content: normal;
}
/*-----------------------------*/

p::before {
    content: "Read this -";
}
p#hometown::before {
    content: none;
}
/*-----------------------------*/

p {
    counter-increment: myIndex;
}
p::before {
    content: counter(myIndex);
}
/*---------------------------*/

/*-----------------------------------------------------*/

a::after {
    content: attr(href);
}
a::before {
    content: attr(href);
}
/*<a href="https://www.w3schools.com">(W3Schools)</a>*/

/*-----------------------------------------------------*/

p::before {
    content: "Read this -";
}
/*------------------------------------------------------*/

p::before {
    content: open-quote;
}
p::after {
    content: close-quote;
}
/*----------------------------------------------------*/

p::before {
    content: open-quote;
}
p::after {
    content: close-quote;
}
p.hometown::before {
    content: no-open-quote;
}
p.hometown::after {
    content: no-close-quote;
}
/*---------------------------------------*/

p::before {
    content: url(w3css.gif);
}
